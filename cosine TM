###IPC코드 워드임베딩 벡터유사도 검사
library(plyr)
library(TTR)
library(forecast)
library(tseries)
library(KoNLP)
library(tidytext)
library(dplyr)
library(tidyverse)
library(reshape)
library(lubridate)
library(nycflights13)
library(keras)
library(tensorflow)
library(ggplot2)
library(timetk)
library(proxy)
library(tm)
#####################
install.packages("tm")
install.packages("proxy")

####################
text=read.csv("C:/a/IPCcode.csv")
eng=text$eng
IPC=text$IPC
maintext=data.frame(IPC,eng)
maintext.t=tibble(maintext)
##################연도별 분리
#################워드 분리
maintext.e=maintext$eng
#################특수문자 제거
maintext.e.p=gsub("[[:punct:]]", " ", maintext.e)
################숫자제거(이 코드는 일시적으로 사용하지 말것)
maintext.e.p.d=gsub("\\d+", " ", maintext.e.p)
################각각 문서 분리
eng <- tibble(seq = 1:length(maintext.e.p.d),text = maintext.e.p.d)
s.maintext=tibble(data.frame(eng,IPC))
#################
token=s.maintext %>% 
  unnest_tokens(
    input = text,
    output = "word"
  )
s.token=token %>% filter(nchar(token$word)>2)
s.c.token=s.token %>% count(IPC,word,sort=TRUE)
################데이터 배열 만들기 800층 정도 생각하기 dim함수 넣어서
arr2 <- array(
  data = df.word$word,
  dimnames = list(df.IPC$IPC
  )
)
################벡터화 시키기
corpus <- Corpus(VectorSource(arr2))
###############문서행렬 만들기
tdm <- TermDocumentMatrix(corpus)
###############확인
inspect(tdm)
###############메트리스 확인
tdm <- as.matrix(tdm)
###############cosine거리재기
cosine_dist_mat <- as.matrix(dist(t(tdm), method = "cosine"))
###############
diag(cosine_dist_mat) <- NA

cosine_dist <- apply(cosine_dist_mat, 2, mean, na.rm=TRUE)

cosine_dist

write.csv(cosine_dist,"c:/a/dist.csv")
